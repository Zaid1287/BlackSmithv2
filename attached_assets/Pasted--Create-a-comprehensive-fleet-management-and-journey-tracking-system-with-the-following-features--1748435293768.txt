
"Create a comprehensive fleet management and journey tracking system with the following features:

Core Architecture
Frontend: React + TypeScript with Tailwind CSS and shadcn/ui components
Backend: Express.js with TypeScript
Database: PostgreSQL with Drizzle ORM
Authentication: Passport.js with session-based auth
Real-time Features: Location tracking and milestone notifications
Database Schema
Create these main entities with relationships:

Users (id, username, password, name, isAdmin, createdAt)
Vehicles (id, licensePlate, model, status, createdAt)
Journeys (id, userId, vehicleLicensePlate, origin, destination, startTime, endTime, status, pouch, initialExpense, currentLatitude/Longitude/Speed, archived)
Expenses (id, journeyId, type, amount, notes, timestamp)
LocationHistory (id, journeyId, latitude, longitude, speed, distanceCovered, timestamp)
Milestones (id, journeyId, type, title, message, data, isDismissed, createdAt)
JourneyPhotos (id, journeyId, imageData, description, timestamp)
Salaries (id, userId, salaryAmount, paidAmount, lastUpdated)
SalaryHistory (id, userId, amount, type, description, timestamp)
Key Features to Implement
1. User Management
Admin and regular user roles
Authentication with username/password
Admin can manage users and vehicles
Salary management system for drivers
2. Journey Management
Start journey with vehicle selection, destination, pouch amount, security deposit
Real-time location tracking during journey
Journey status: active, completed, archived
End journey functionality
Journey photo capture and storage
3. Expense Tracking
Multiple expense types: fuel, food, toll, topUp, hydInward, salary, etc.
Real-time expense recording during journey
Financial calculations: working balance = pouch + topUps - expenses
Security deposit handling on journey completion
4. Milestone System
Automated milestone creation: journey start/end, distance milestones, expense alerts, rest reminders
Dismissible notifications
Journey progress tracking
5. Financial Management
Real-time profit/loss calculations
Expense categorization and reporting
Salary tracking and payment history
Financial data export capabilities
6. Admin Dashboard
Overview of active journeys
Fleet status and vehicle management
Driver management and salary administration
Financial statistics and reporting
Journey history with filtering
7. Mobile-First Design
Responsive design for mobile devices
Touch-friendly interfaces
Mobile bottom navigation
Camera integration for photo capture
PWA capabilities
8. Advanced Features
Google Maps integration for route planning
Fuel station finder
Real-time vehicle tracking on map
Journey photo gallery
Export functionality for financial data
Multi-language support structure
Technical Requirements
Use proper TypeScript typing throughout
Implement proper error handling and validation
Mobile-responsive design with touch interactions
Real-time updates for location and expenses
Secure authentication and authorization
Database relationships with foreign keys
File upload handling for photos (base64 encoding)
UI/UX Specifications
Clean, professional dashboard design
Card-based layouts for journey information
Color-coded status indicators
Interactive maps for vehicle tracking
Modal dialogs for forms and details
Toast notifications for user feedback
Loading states and error handling
Please create a complete system with all CRUD operations, proper routing, authentication middleware, and a polished user interface suitable for fleet management operations."